const doc = '### 代码展示\n\n```html\n<!-- 默认状态 -->\n<tb-tabs\n  tabsList="{{tabsList}}"\n  tabsActiveType="{{tabsActiveType}}"\n  lineStatus="{{false}}"\n  placeType="center"\n  bindtabs="getTabs"\n/>\n```\n\n```js\n\n  data: {\n    tabsList: [\n      { text: "Tab 1", type: "tab_1" },\n      { text: "Tab 2", type: "tab_2" },\n      { text: "Tab 3", type: "tab_3" },\n    ],\n    tabsList1: [\n      { text: "Tab 1", type: "tab_1", imgUrl: "/components/images/icon_1.png" },\n      { text: "Tab 2", type: "tab_2", imgUrl: "/components/images/icon_2.png" },\n      { text: "Tab 3", type: "tab_3", imgUrl: "/components/images/icon_3.png" },\n    ],\n    tabsActiveType: "tab_1",\n  },\n\n  getTabs(e) {\n    console.log("e", e.detail);\n    let { type } = e.detail;\n    this.setData({\n      tabsActiveType: type,\n    });\n  },\n```\n\n### API\n\n| 属性           | 说明                                      | 类型   | 默认值 |\n| -------------- | ----------------------------------------- | ------ | ------ |\n| tabsList       | tabs 数组 obj:{text,type,imgUrl,disabled} | array  | []     |\n| tabsActiveType | 选中态(对应数组的的 type 值)              | string | -      |\n| lineStatus     | 是否显示下划线                            | bool   | false  |\n| fixedStatus    | 定位(相对父级 top:0)                      | string | -      |\n| placeType      | 显示类型(left/center/border)              | string | left   |\n| tab_class      | tabs 最外层 样式                          | string | -      |\n| tab_item_class | 每个 tab 样式                             | string | -      |\n| tab_img_class  | 图标 样式                                 | string | -      |\n| tabs           | tabs 点击事件                             | fun    | -      |\n'
module.exports = doc
